@page
@model IndexModel
@{
    ViewData["Title"] = "Micro-ondas Digital";
}

<h1>🎛️ Micro-ondas Digital</h1>

<h2>🍽️ Programas Pré-definidos</h2>
<div class="predefined-programs">
    @foreach (var program in Model.PredefinedPrograms)
    {
        <div class="program-card">
            <form method="post" asp-page-handler="StartPredefinedProgram" style="margin: 0;">
                <input type="hidden" name="programName" value="@program.Name" />
                <button type="submit" class="program-btn" data-program="@program.Name">
                    <strong>@program.Name</strong><br />
                    <small>@program.Food</small><br />
                    <small>@(program.TimeInSeconds >= 60 ? $"{program.TimeInSeconds/60}:{(program.TimeInSeconds%60):00}" :
                                            $"{program.TimeInSeconds}s"), P@(program.PowerLevel)</small>
                </button>
            </form>
            <div class="program-instructions">
                <strong>Instruções:</strong><br />
                @program.Instructions
            </div>
        </div>
    }
</div>

<hr style="margin: 20px 0;" />

<h2>🔥 Aquecimento Manual</h2>

<form method="post" asp-page-handler="StartHeating" id="startForm">
    <div style="margin-bottom: 10px;">
        <label for="timeInSeconds">Tempo (segundos, 1-120):</label>
        <input type="number" id="timeInSeconds" name="timeInSeconds" min="1" max="120" class="form-control"
            style="width: 200px; display: inline-block;" />
    </div>
    <div style="margin-bottom: 10px;">
        <label for="powerLevel">Potência (1-10):</label>
        <input type="number" id="powerLevel" name="powerLevel" min="1" max="10" value="10" class="form-control"
            style="width: 200px; display: inline-block;" />
    </div>
    <button type="submit" id="startBtn" class="btn btn-success">Iniciar Aquecimento</button>
</form>

<form method="post" asp-page-handler="ResumeHeating" id="resumeForm" style="display:none;">
    <button type="submit" id="resumeBtn" class="btn btn-warning">Retomar Aquecimento</button>
</form>

<div style="margin-top: 15px;">
    <form method="post" asp-page-handler="StartQuickHeat" style="display:inline; margin-right: 10px;">
        <button type="submit" class="btn btn-info">Início Rápido (30s, P10)</button>
    </form>

    <form method="post" asp-page-handler="IncreaseTime" style="display:inline; margin-right: 10px;">
        <button type="submit" class="btn btn-outline-primary">+30s</button>
    </form>

    <form method="post" asp-page-handler="PauseOrCancel" style="display:inline;">
        <button type="submit" id="pauseCancelBtn" class="btn btn-danger">Pausar/Cancelar</button>
    </form>
</div>

@if (ViewData["Message"] != null)
{
    <div class="alert alert-info" role="alert" style="margin-top: 15px;">
        <strong>@ViewData["Message"]</strong>
    </div>
}

@Html.AntiForgeryToken()

<hr />

<h2>📊 Status do Microondas</h2>
<button id="getProgressBtn" type="button" class="btn btn-primary">Ver Progresso</button>
<button id="autoUpdateBtn" type="button" class="btn btn-secondary">Atualização Automática</button>
<div id="progressContainer" style="margin-top: 20px;">
    <p id="progressText">Clique para ver o progresso.</p>
    <div id="visualProgress" class="program-progress">
    </div>
</div>

<script>
    let autoUpdateInterval = null;

    function updateProgramStatus(data) {
        const programButtons = document.querySelectorAll('.program-btn');
        const currentProgram = data.currentProgram;

        programButtons.forEach(btn => {
            if (currentProgram && btn.getAttribute('data-program') === currentProgram) {
                btn.classList.add('active');
            } else {
                btn.classList.remove('active');
            }
        });
    }

    async function updateProgress() {
        try {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const response = await fetch('/?handler=GetProgress', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token,
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            });

            const data = await response.json();

            document.getElementById('progressText').innerText =
                `Status: ${data.isRunning ? 'Aquecendo' : 'Parado'} | ` +
                `Tempo restante: ${data.formattedRemainingTime} | ` +
                `Potência: ${data.powerLevel} | ` +
                `Progresso: ${data.progressPercent}%`;

            document.getElementById('visualProgress').innerText = data.progress;

            updateProgramStatus(data);

            const startForm = document.getElementById('startForm');
            const resumeForm = document.getElementById('resumeForm');
            const pauseBtn = document.getElementById('pauseCancelBtn');
            const startBtn = document.getElementById('startBtn');
            const timeInput = document.getElementById('timeInSeconds');
            const powerInput = document.getElementById('powerLevel');
            const autoUpdateBtn = document.getElementById('autoUpdateBtn');

            if (data.progress && data.progress.includes('PAUSADO')) {
                startForm.style.display = 'none';
                resumeForm.style.display = 'block';
                pauseBtn.textContent = 'Cancelar';
                if (autoUpdateInterval) {
                    clearInterval(autoUpdateInterval);
                    autoUpdateInterval = null;
                    autoUpdateBtn.textContent = 'Atualização Automática';
                }
            } else if (data.isRunning) {
                startForm.style.display = 'block';
                resumeForm.style.display = 'none';
                startBtn.textContent = 'Aquecendo...';
                startBtn.disabled = true;
                timeInput.disabled = true;
                powerInput.disabled = true;
                pauseBtn.textContent = 'Pausar';

                if (!autoUpdateInterval) {
                    autoUpdateInterval = setInterval(updateProgress, 1000);
                    autoUpdateBtn.textContent = 'Parar Atualização';
                }
            } else {
                startForm.style.display = 'block';
                resumeForm.style.display = 'none';
                startBtn.textContent = 'Iniciar Aquecimento';
                startBtn.disabled = false;
                timeInput.disabled = false;
                powerInput.disabled = false;
                timeInput.required = true;
                powerInput.required = true;
                pauseBtn.textContent = 'Limpar';

                if (autoUpdateInterval && data.progress && data.progress.includes('concluído')) {
                    clearInterval(autoUpdateInterval);
                    autoUpdateInterval = null;
                    autoUpdateBtn.textContent = 'Atualização Automática';
                }
            }

        } catch (error) {
            console.error('Erro no progresso:', error);
            document.getElementById('progressText').innerText = 'Erro ao obter progresso.';
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
    });

    document.getElementById('getProgressBtn').addEventListener('click', updateProgress);

    document.getElementById('autoUpdateBtn').addEventListener('click', () => {
        if (autoUpdateInterval) {
            clearInterval(autoUpdateInterval);
            autoUpdateInterval = null;
            document.getElementById('autoUpdateBtn').innerText = 'Atualização Automática';
        } else {
            autoUpdateInterval = setInterval(updateProgress, 1000);
            document.getElementById('autoUpdateBtn').innerText = 'Parar Atualização';
            updateProgress();
        }
    });

    document.getElementById('startForm').addEventListener('submit', function (e) {
        const timeInput = document.getElementById('timeInSeconds');
        const powerInput = document.getElementById('powerLevel');

        if (!timeInput.disabled && (!timeInput.value || !powerInput.value)) {
            e.preventDefault();
            alert('Por favor, preencha tempo e potência.');
            return false;
        }
    });
</script>
